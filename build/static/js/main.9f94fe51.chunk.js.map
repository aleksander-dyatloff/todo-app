{"version":3,"sources":["components/Container.tsx","components/DynamicElement.ts","components/Paper.tsx","components/Ripple.tsx","components/Input.tsx","utils/constants.ts","utils/paths.ts","redux/TodosSlice.ts","components/Button.tsx","components/Progress.tsx","utils/mediaQuery.ts","components/IconButton.tsx","components/ColorPicker.tsx","icon-components/TrippleDotIcon.tsx","icon-components/CloseIcon.tsx","components/TodoPushBar.tsx","icon-components/LinkedInIcon.tsx","icon-components/CheckIcon.tsx","components/CheckBox.tsx","components/Typography.tsx","components/TodosFilter.tsx","icon-components/PencilIcon.tsx","components/Divider.tsx","components/TodoBody.tsx","components/Ticker.tsx","icon-components/ArrowIcon.tsx","components/TodoHeader.tsx","components/TodoItem.tsx","components/TodosList.tsx","pages/TodosPage.tsx","components/App.tsx","redux/store.ts","index.tsx"],"names":["Container","children","restProps","className","DynamicElement","forwardRef","props","ref","element","createElement","Paper","rippleMaxId","Ripple","duration","onMouseDown","disabled","useState","ripples","setRipples","handleCreateRipple","useCallback","e","rippleContainer","currentTarget","getBoundingClientRect","size","width","height","x","clientX","left","y","clientY","top","newRipple","id","prevRipples","setTimeout","filter","ripple","undefined","map","style","animationDuration","Input","variant","value","readOnly","data-disabled","PENDING","path","api","todos","todo","name","fetchTodos","createAsyncThunk","a","axios","get","response","fetchedTodos","data","createTodo","todoInfo","post","createdTodo","deleteTodo","todoId","delete","deletedTodo","updateTodo","restTodoInfo","put","updatedTodo","initialState","fetchStatus","TodosSlice","createSlice","reducers","extraReducers","addCase","fulfilled","state","action","payload","rejected","pending","push","deletedTodoId","preUpdatedTodo","find","Object","assign","todosSliceSelector","todosSliceState","filteredTodos","createSelector","_","todoMatch","isDone","color","Button","Progress","visible","CSSTransition","unmountOnExit","in","timeout","classNames","mediaQuery","params","min","max","currentWindowWidth","document","body","offsetWidth","result","IconButton","ColorPicker","onChange","handleChangeColor","newColor","expandedEvent","target","onClick","TrippleDotIcon","focusable","viewBox","aria-hidden","fill","d","CloseIcon","TodoPushBar","dispatch","useDispatch","loading","setLoading","expandedSettings","setExpandedSettings","useFormik","onSubmit","initialValues","title","description","startTime","endTime","values","getFieldProps","resetForm","handleCreateTodo","handleToggleExpandSettings","prevState","autoComplete","placeholder","trim","memo","LinkedInIcon","CheckIcon","CheckBox","checked","handleCheckBoxClick","data-checked","role","aria-checked","Typography","transform","TodosFilter","filterTodos","filterValues","handleFilterChange","prevFilter","handleResetFilter","Boolean","aria-label","rel","href","PencilIcon","Divider","TodoBody","expanded","changeTodo","closeChangeTodo","changing","updateLoading","setUpdateLoading","handleActivateEditorMode","dispatchUpdateTodo","Ticker","enable","tickerRef","useRef","isScroll","setScroll","useLayoutEffect","ticker","current","scrollWidth","clientWidth","ArrowIcon","direction","TodoHeader","deleteLoading","isChecked","expandTodo","closeTodo","checkTodo","String","TodoItem","setChangingTodo","setExpandedTodo","index","setDeleteLoading","setChecked","handleCheckTodo","handleDeleteTodo","todoItemStyles","useMemo","transitionDelay","TodosList","expandedTodo","chaningTodo","todoItems","TransitionGroup","component","length","TodosPage","todosFilter","setTodosFilter","useSelector","useEffect","App","reducer","TodosSliceReducer","store","configureStore","root","getElementById","app","render"],"mappings":"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","file":"static/js/main.9f94fe51.chunk.js","sourcesContent":["import { FC } from 'react';\n\nconst Container: FC = ({ children, ...restProps }) => (\n  <div className=\"container\" {...restProps}>{children}</div>\n);\n\nexport default Container;\n","import {\n  AllHTMLAttributes, createElement, forwardRef,\n} from 'react';\n\ninterface DynamicElementProps extends AllHTMLAttributes<HTMLElement> {\n  element?: keyof HTMLElementTagNameMap\n}\n\nconst DynamicElement = forwardRef<HTMLElement, DynamicElementProps>((props, ref) => {\n  const {\n    element = 'div',\n    children,\n    ...restProps\n  } = props;\n\n  return createElement(\n    element,\n    { ref, ...restProps },\n    children,\n  );\n});\n\nexport default DynamicElement;\n","import { AllHTMLAttributes, FC } from 'react';\nimport DynamicElement from '@components/DynamicElement';\n\ninterface PaperProps extends AllHTMLAttributes<HTMLElement> {\n  element?: keyof HTMLElementTagNameMap\n}\n\nconst Paper: FC<PaperProps> = (props) => {\n  const {\n    element = 'div',\n    className = '',\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <DynamicElement\n      className={`paper secondary ${className}`}\n      element={element}\n      {...restProps}\n    >\n      {children}\n    </DynamicElement>\n  );\n};\n\nexport default Paper;\n","import {\n  AllHTMLAttributes,\n  FC, MouseEventHandler, useCallback, useState,\n} from 'react';\nimport DynamicElement from '@components/DynamicElement';\n\ninterface RippleProps extends AllHTMLAttributes<HTMLElement> {\n  element?: keyof HTMLElementTagNameMap\n  duration?: number\n}\n\ninterface RippleElem {\n  readonly id: number\n  x: number\n  y: number\n  size: number\n}\n\nlet rippleMaxId = 0;\n\nconst Ripple: FC<RippleProps> = (props) => {\n  const {\n    children,\n    element,\n    duration = 850,\n    className = '',\n    onMouseDown,\n    disabled,\n    ...restProps\n  } = props;\n\n  const [ripples, setRipples] = useState<RippleElem[]>([]);\n\n  const handleCreateRipple: MouseEventHandler<HTMLButtonElement> = useCallback((e) => {\n    if (onMouseDown) onMouseDown(e);\n\n    const rippleContainer = e.currentTarget.getBoundingClientRect();\n\n    const size = rippleContainer.width > rippleContainer.height\n      ? rippleContainer.width\n      : rippleContainer.height;\n\n    const x = e.clientX - rippleContainer.left - size / 2;\n    const y = e.clientY - rippleContainer.top - size / 2;\n\n    const newRipple: RippleElem = {\n      id: rippleMaxId++, x, y, size,\n    };\n\n    setRipples((prevRipples) => ([...prevRipples, newRipple]));\n\n    setTimeout(() => {\n      setRipples((prevRipples) => prevRipples.filter((ripple) => ripple !== newRipple));\n    }, duration);\n  }, [onMouseDown, duration]);\n\n  return (\n    <DynamicElement\n      className={`ripple ${className}`}\n      onMouseDown={disabled ? undefined : handleCreateRipple}\n      element={element}\n      disabled={disabled}\n      {...restProps}\n    >\n      {children}\n      <div className=\"ripple__container\">\n        {ripples.map((ripple) => (\n          <span\n            key={ripple.id}\n            className=\"ripple__elem\"\n            style={{\n              top: ripple.y,\n              left: ripple.x,\n              width: ripple.size,\n              height: ripple.size,\n              animationDuration: `${duration}ms`,\n            }}\n          />\n        ))}\n      </div>\n    </DynamicElement>\n  );\n};\n\nexport default Ripple;\n","import { AllHTMLAttributes, FC } from 'react';\nimport Ripple from '@components/Ripple';\nimport DynamicElement from '@components/DynamicElement';\n\ninterface InputProps extends AllHTMLAttributes<HTMLElement> {\n  variant?: 'input' | 'textarea'\n}\n\nconst Input: FC<InputProps> = (props) => {\n  const {\n    variant = 'input',\n    className = '',\n    value,\n    disabled,\n    readOnly,\n    ...restProps\n  } = props;\n\n  return (\n    <Ripple\n      className={`input ${readOnly ? 'readonly' : ''} ${className}`}\n      disabled={disabled}\n      data-disabled={disabled}\n    >\n      <DynamicElement\n        disabled={disabled}\n        element={variant}\n        className=\"input__elem\"\n        value={value}\n        readOnly={readOnly}\n        {...restProps}\n      />\n    </Ripple>\n  );\n};\n\nexport default Input;\n","import { FetchStatus } from '@utils/types';\n\nexport const PENDING: FetchStatus = 'pending';\nexport const FULFILLED = 'fulfilled';\nexport const REJECTED = 'rejected';\nexport const IDLE = 'idle';\n","const path = {\n  api: {\n    todos: 'https://dyatloff-todo-app-server.herokuapp.com/api/todos',\n    todo: (id: number) => `https://dyatloff-todo-app-server.herokuapp.com/api/todos/${id}`,\n  },\n};\n\nexport default path;\n","import { RootState } from '@redux/store';\nimport { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit';\nimport {\n  FULFILLED, IDLE, PENDING, REJECTED,\n} from '@utils/constants';\nimport path from '@utils/paths';\nimport {\n  FetchStatus, Todo, TodoInfo, TodoValues,\n} from '@utils/types';\nimport axios from 'axios';\n\nconst name: string = 'todos';\n\nexport const fetchTodos = createAsyncThunk(`${name}/fetchTodos`, async () => {\n  const response = await axios.get(path.api.todos);\n\n  const fetchedTodos: Todo[] = response.data;\n\n  return fetchedTodos;\n});\n\nexport const createTodo = createAsyncThunk(`${name}/createTodo`, async (todoInfo: TodoValues) => {\n  const response = await axios.post(path.api.todos, todoInfo);\n\n  const createdTodo: Todo = response.data;\n\n  return createdTodo;\n});\n\nexport const deleteTodo = createAsyncThunk(`${name}/deleteTodo`, async (todoId: number) => {\n  const response = await axios.delete(path.api.todo(todoId));\n\n  const deletedTodo: Todo = response.data;\n\n  return deletedTodo.id;\n});\n\nexport const updateTodo = createAsyncThunk(`${name}/updateTodo`, async (todoInfo: TodoInfo) => {\n  const { id, ...restTodoInfo } = todoInfo;\n\n  const response = await axios.put(path.api.todo(id), restTodoInfo);\n\n  const updatedTodo: Todo = response.data;\n\n  return updatedTodo;\n});\n\nexport interface TodosSliceState {\n  fetchStatus: FetchStatus\n  todos: Todo[]\n}\n\nconst initialState: TodosSliceState = {\n  fetchStatus: IDLE,\n  todos: [],\n};\n\nconst TodosSlice = createSlice({\n  name,\n  initialState,\n  reducers: {},\n\n  extraReducers: ({ addCase }) => {\n    addCase(fetchTodos.fulfilled, (state, action) => {\n      const fetchedTodos = action.payload;\n\n      state.todos = fetchedTodos;\n\n      state.fetchStatus = FULFILLED;\n    });\n    addCase(fetchTodos.rejected, (state) => {\n      state.fetchStatus = REJECTED;\n    });\n    addCase(fetchTodos.pending, (state) => {\n      state.fetchStatus = PENDING;\n    });\n\n    addCase(createTodo.fulfilled, (state, action) => {\n      const createdTodo: Todo = action.payload;\n\n      state.todos.push(createdTodo);\n    });\n\n    addCase(deleteTodo.fulfilled, (state, action) => {\n      const deletedTodoId: number = action.payload;\n\n      state.todos = state.todos.filter((todo) => todo.id !== deletedTodoId);\n    });\n\n    addCase(updateTodo.fulfilled, (state, action) => {\n      const updatedTodo: Todo = action.payload;\n\n      const preUpdatedTodo = state.todos.find((todo) => todo.id === updatedTodo.id);\n\n      Object.assign(preUpdatedTodo, updatedTodo);\n    });\n  },\n});\n\nexport const todosSliceSelector = (state: RootState) => state.todosSliceState;\n\nexport const filteredTodos = createSelector(\n  (state: RootState) => state.todosSliceState.todos,\n  (_: RootState, todoMatch: TodoValues) => todoMatch,\n  (todos: Todo[], todoMatch) => {\n    const {\n      isDone, color,\n    } = todoMatch;\n\n    return todos.filter((todo) => {\n      if (isDone && todo.isDone !== isDone) return false;\n\n      if (color && todo.color !== color) return false;\n\n      return true;\n    });\n  },\n);\n\nexport default TodosSlice.reducer;\n","import { AllHTMLAttributes, FC } from 'react';\nimport { AppColor, ButtonTypes } from '@utils/types';\nimport Ripple from '@components/Ripple';\n\ninterface ButtonProps extends AllHTMLAttributes<HTMLButtonElement> {\n  color?: AppColor\n  type?: ButtonTypes\n  duration?: number\n}\n\nconst Button: FC<ButtonProps> = (props) => {\n  const {\n    children,\n    className = '',\n    color = 'primary',\n    ...restProps\n  } = props;\n\n  return (\n    <Ripple\n      element=\"button\"\n      className={`button ${color} ${className}`}\n      {...restProps}\n    >\n      {children}\n    </Ripple>\n  );\n};\n\nexport default Button;\n","import { AppColor } from '@utils/types';\nimport { AllHTMLAttributes, FC } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\ninterface ProgressProps extends AllHTMLAttributes<HTMLElement> {\n  visible: boolean\n  variant?: 'linear' | 'circular'\n  color?: AppColor\n}\n\nconst Progress: FC<ProgressProps> = (props) => {\n  const {\n    visible,\n    className = '',\n    color = 'primary',\n    variant = 'circular',\n    ...restProps\n  } = props;\n\n  return (\n    <CSSTransition\n      unmountOnExit\n      in={visible}\n      timeout={300}\n      classNames=\"progress\"\n    >\n      <div\n        className={`progress ${color} ${variant} ${className}`}\n        {...restProps}\n      >\n        <div className=\"progress__track\">\n          {variant === 'linear' && <span className=\"progress__thumb\" />}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Progress;\n","interface MediaQueryParams {\n  min: number\n  max: number\n}\n\nconst mediaQuery = (params: MediaQueryParams): boolean => {\n  const { min, max } = params;\n  const currentWindowWidth = document.body.offsetWidth;\n  let result = false;\n\n  if (min <= currentWindowWidth && max >= currentWindowWidth) result = true;\n\n  return result;\n};\n\nexport default mediaQuery;\n","import { AllHTMLAttributes, FC } from 'react';\nimport { AppColor, ButtonTypes } from '@utils/types';\nimport Button from '@components/Button';\n\ninterface IconButtonProps extends AllHTMLAttributes<HTMLButtonElement> {\n  type?: ButtonTypes\n  duration?: number\n  color?: AppColor\n}\n\nconst IconButton: FC<IconButtonProps> = (props) => {\n  const {\n    children,\n    className = '',\n    color = 'secondary',\n    ...restProps\n  } = props;\n\n  return (\n    <Button\n      color={color}\n      className={`icon-button ${className}`}\n      {...restProps}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default IconButton;\n","import { Color } from '@utils/types';\nimport {\n  AllHTMLAttributes, FC, FormEventHandler, MouseEventHandler, useCallback,\n} from 'react';\nimport IconButton from '@components/IconButton';\nimport Paper from '@components/Paper';\n\ninterface ColorPickerProps extends AllHTMLAttributes<HTMLButtonElement> {\n  value: Color | ''\n  onChange: FormEventHandler<HTMLButtonElement>\n}\n\nconst ColorPicker: FC<ColorPickerProps> = (props) => {\n  const {\n    value,\n    name,\n    onChange,\n    className = '',\n    ...restProps\n  } = props;\n\n  const handleChangeColor: MouseEventHandler<HTMLButtonElement> = useCallback((e) => {\n    const newColor = e.currentTarget.name;\n\n    const expandedEvent = {\n      ...e,\n      target: {\n        value: newColor,\n        name,\n        ...e.target,\n      },\n    };\n\n    if (onChange) onChange(expandedEvent);\n  }, [onChange, name]);\n\n  return (\n    <Paper\n      className={`color-picker ${className}`}\n      {...restProps}\n    >\n      <IconButton\n        className={`color-picker__color blue ${value === 'blue' ? 'active' : ''}`}\n        onClick={handleChangeColor}\n        name=\"blue\"\n      />\n      <IconButton\n        className={`color-picker__color red ${value === 'red' ? 'active' : ''}`}\n        onClick={handleChangeColor}\n        name=\"red\"\n      />\n      <IconButton\n        className={`color-picker__color green ${value === 'green' ? 'active' : ''}`}\n        onClick={handleChangeColor}\n        name=\"green\"\n      />\n    </Paper>\n  );\n};\n\nexport default ColorPicker;\n","import { FC } from 'react';\n\nconst TrippleDotIcon: FC = () => (\n  <svg\n    className=\"icon\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n  </svg>\n);\n\nexport default TrippleDotIcon;\n","import { FC } from 'react';\n\nconst CloseIcon: FC = () => (\n  <svg\n    className=\"icon\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\n  </svg>\n);\n\nexport default CloseIcon;\n","import {\n  FC, memo, useCallback, useState,\n} from 'react';\nimport Paper from '@components/Paper';\nimport Input from '@components/Input';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { createTodo } from '@redux/TodosSlice';\nimport { TodoValues } from '@utils/types';\nimport Button from '@components/Button';\nimport Progress from '@components/Progress';\nimport mediaQuery from '@utils/mediaQuery';\nimport ColorPicker from '@components/ColorPicker';\nimport TrippleDotIcon from '@icons/TrippleDotIcon';\nimport IconButton from '@components/IconButton';\nimport CloseIcon from '@icons/CloseIcon';\n\nconst TodoPushBar: FC = (props) => {\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n\n  const [expandedSettings, setExpandedSettings] = useState(false);\n\n  const { values: todoInfo, getFieldProps, resetForm } = useFormik({\n    onSubmit: () => {},\n    initialValues: {\n      title: '',\n      description: '',\n      color: 'blue',\n      startTime: '',\n      endTime: '',\n    } as TodoValues,\n  });\n\n  const handleCreateTodo = useCallback(async () => {\n    setLoading(true);\n\n    await dispatch(createTodo(todoInfo));\n\n    setLoading(false);\n\n    resetForm();\n  }, [dispatch, todoInfo, resetForm]);\n\n  const handleToggleExpandSettings = useCallback(() => {\n    setExpandedSettings((prevState) => !prevState);\n  }, []);\n\n  return (\n    <Paper className=\"todo-push-bar\">\n      <Progress\n        className=\"todo-push-bar__progress\"\n        variant=\"linear\"\n        visible={loading}\n      />\n      <div className=\"todo-push-bar__field-group\">\n        <Input\n          autoComplete=\"off\"\n          className=\"todo-push-bar__input\"\n          placeholder=\"Todo title...\"\n          {...getFieldProps('title')}\n        />\n        <Input\n          className=\"todo-push-bar__input\"\n          placeholder=\"Todo description...\"\n          variant=\"textarea\"\n          {...getFieldProps('description')}\n        />\n        <div className=\"todo-push-bar__action-bar\">\n          <Button\n            color={todoInfo.color}\n            className=\"todo-push-bar__push-btn\"\n            onClick={handleCreateTodo}\n            disabled={!todoInfo.title?.trim() || loading}\n          >\n            Add todo\n          </Button>\n\n          {mediaQuery({ min: 0, max: 768 }) && (\n            <IconButton\n              onClick={handleToggleExpandSettings}\n              color={todoInfo.color}\n              className=\"todo-push-bar__expand-advanced-setting-btn\"\n            >\n              {expandedSettings ? <CloseIcon /> : <TrippleDotIcon />}\n            </IconButton>\n          )}\n\n        </div>\n      </div>\n      <div className={`todo-push-bar__advanced-setting ${expandedSettings ? 'expanded' : ''}`}>\n        <ColorPicker\n          className=\"todo-push-bar__color-picker\"\n          {...getFieldProps('color')}\n        />\n      </div>\n    </Paper>\n  );\n};\n\nexport default memo(TodoPushBar);\n","import { FC } from 'react';\n\nconst LinkedInIcon: FC = (props) => (\n  <svg\n    className=\"icon\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\" />\n  </svg>\n);\n\nexport default LinkedInIcon;\n","import { FC } from 'react';\n\nconst CheckIcon: FC = () => (\n  <svg\n    className=\"icon\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" />\n  </svg>\n);\n\nexport default CheckIcon;\n","import {\n  AllHTMLAttributes, FC, MouseEventHandler, useCallback,\n} from 'react';\nimport { ButtonTypes, Color } from '@utils/types';\nimport CheckIcon from '@icons/CheckIcon';\nimport IconButton from '@components/IconButton';\n\ninterface CheckBoxProps extends AllHTMLAttributes<HTMLElement> {\n  type?: ButtonTypes\n  color?: Color\n}\n\nconst CheckBox: FC<CheckBoxProps> = (props) => {\n  const {\n    checked = false,\n    color = 'primary',\n    onChange,\n    onClick,\n    className = '',\n    ...restProps\n  } = props;\n\n  const handleCheckBoxClick: MouseEventHandler<HTMLButtonElement> = useCallback((e) => {\n    const expandedEvent = {\n      ...e,\n      target: {\n        ...e.target,\n        name: e.currentTarget.name,\n        value: !checked,\n      },\n    };\n\n    if (onClick) onClick(expandedEvent);\n    if (onChange) onChange(expandedEvent);\n  }, [onClick, onChange, checked]);\n\n  return (\n    <IconButton\n      onClick={handleCheckBoxClick}\n      data-checked={checked}\n      role=\"checkbox\"\n      aria-checked={checked}\n      className={`checkbox ${color} ${className}`}\n      {...restProps}\n    >\n      <CheckIcon />\n    </IconButton>\n  );\n};\n\nexport default CheckBox;\n","import { AllHTMLAttributes, FC } from 'react';\nimport '@components/Typography.scss';\nimport { TextTransform, TypographyElementName } from '@utils/types';\nimport DynamicElement from '@components/DynamicElement';\n\ninterface TypographyProps extends AllHTMLAttributes<HTMLElement> {\n  variant?: TypographyElementName\n  transform?: TextTransform\n}\n\nconst Typography: FC<TypographyProps> = (props) => {\n  const {\n    variant = 'p',\n    transform = '',\n    className = '',\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <DynamicElement\n      className={`typography ${transform} ${variant} ${className}`}\n      element={variant}\n      {...restProps}\n    >\n      {children}\n    </DynamicElement>\n  );\n};\n\nexport default Typography;\n","import CloseIcon from '@icons/CloseIcon';\nimport LinkedInIcon from '@icons/LinkedInIcon';\nimport { TodoValues } from '@utils/types';\nimport {\n  Dispatch, FC, memo, SetStateAction, useCallback,\n} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport CheckBox from './CheckBox';\nimport ColorPicker from './ColorPicker';\nimport IconButton from './IconButton';\nimport Paper from './Paper';\nimport Typography from './Typography';\n\ninterface TodosFilterProps {\n  filterTodos: Dispatch<SetStateAction<TodoValues>>\n  filterValues: TodoValues\n}\n\nconst TodosFilter: FC<TodosFilterProps> = (props) => {\n  const { filterTodos, filterValues } = props;\n\n  const handleFilterChange = useCallback((e) => {\n    const { name, value } = e.target;\n\n    filterTodos((prevFilter) => ({ ...prevFilter, [name]: value }));\n  }, [filterTodos]);\n\n  const handleResetFilter = useCallback(() => {\n    filterTodos({});\n  }, [filterTodos]);\n\n  return (\n    <Paper className=\"todos-filter\">\n      <CSSTransition\n        in={Boolean(filterValues.color || filterValues.isDone)}\n        timeout={250}\n        unmountOnExit\n        classNames=\"todos-filter__reset-icon-btn\"\n      >\n        <IconButton\n          className=\"todos-filter__reset-icon-btn\"\n          aria-label=\"clear todos filter\"\n          onClick={handleResetFilter}\n        >\n          <CloseIcon />\n        </IconButton>\n      </CSSTransition>\n      <ColorPicker\n        className=\"todos-filter__color-picker\"\n        value={filterValues.color ?? ''}\n        onChange={handleFilterChange}\n        name=\"color\"\n      />\n      <a\n        className={`todos-filter__author-link primary ${filterValues.color || filterValues.isDone ? '' : 'visible'}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://www.linkedin.com/in/aleksander-dyatloff3112/\"\n      >\n        <LinkedInIcon />\n      </a>\n      <Typography variant=\"h6\">Checked:</Typography>\n      <CheckBox\n        className=\"todos-filter__checkbox\"\n        checked={filterValues.isDone}\n        onChange={handleFilterChange}\n        name=\"isDone\"\n      />\n    </Paper>\n  );\n};\n\nexport default memo(TodosFilter);\n","import { FC } from 'react';\n\nconst PencilIcon: FC = () => (\n  <svg\n    className=\"icon\"\n    focusable=\"false\"\n    viewBox=\"-2 -2 28 28\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM21.41 6.34l-3.75-3.75-2.53 2.54 3.75 3.75 2.53-2.54z\" />\n  </svg>\n);\n\nexport default PencilIcon;\n","import { AllHTMLAttributes, FC } from 'react';\n\ninterface DividerProps extends AllHTMLAttributes<HTMLDivElement> {\n  variant?: 'vertical' | 'horizontal'\n}\n\nconst Divider: FC<DividerProps> = ({ variant = 'horizontal', className = '', ...restProps }) => (\n  <div\n    className={`divider ${variant} ${className}`}\n    {...restProps}\n  />\n);\n\nexport default Divider;\n","import PencilIcon from '@icons/PencilIcon';\nimport { Todo, TodoValues } from '@utils/types';\nimport {\n  FC, memo, MouseEventHandler, useCallback, useState,\n} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Divider from '@components/Divider';\nimport IconButton from '@components/IconButton';\nimport Input from '@components/Input';\nimport Typography from '@components/Typography';\nimport { useDispatch } from 'react-redux';\nimport { updateTodo } from '@redux/TodosSlice';\nimport CheckIcon from '@icons/CheckIcon';\nimport Progress from './Progress';\n\ninterface TodoBodyProps {\n  todo: Todo\n  todoInfo: TodoValues\n  expanded: boolean\n  changing: boolean\n  changeTodo: MouseEventHandler\n  closeChangeTodo: MouseEventHandler\n  getFieldProps: any\n}\n\nconst TodoBody: FC<TodoBodyProps> = (props) => {\n  const {\n    todo,\n    expanded,\n    changeTodo,\n    closeChangeTodo,\n    changing,\n    getFieldProps,\n    todoInfo,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const [updateLoading, setUpdateLoading] = useState(false);\n\n  const handleActivateEditorMode: MouseEventHandler = useCallback((e) => {\n    changeTodo(e);\n  }, [changeTodo]);\n\n  const dispatchUpdateTodo: MouseEventHandler = useCallback(async (e) => {\n    setUpdateLoading(true);\n\n    await dispatch(updateTodo({ id: todo.id, ...todoInfo }));\n\n    setUpdateLoading(false);\n    closeChangeTodo(e);\n  }, [closeChangeTodo, dispatch, todo.id, todoInfo]);\n\n  return (\n    <CSSTransition\n      in={expanded}\n      timeout={300}\n      unmountOnExit\n      classNames=\"todo-body\"\n    >\n      <div className=\"todo-item__body todo-body\">\n        <IconButton\n          disabled={!todoInfo.title?.trim()}\n          onClick={changing ? dispatchUpdateTodo : handleActivateEditorMode}\n          aria-label=\"edit todo\"\n          className=\"todo-body__update-btn\"\n        >\n          <Progress\n            className=\"todo-body__update-progress\"\n            visible={updateLoading}\n          />\n          {changing ? <CheckIcon /> : <PencilIcon />}\n        </IconButton>\n        <Divider className=\"todo-body__divider\" />\n        <div className={`todo-body__description-wrapper ${changing ? 'edit' : ''}`}>\n\n          {changing ? (\n            <Input\n              className=\"todo-body__description-input\"\n              placeholder=\"Todo description...\"\n              variant=\"textarea\"\n              {...getFieldProps('description')}\n            />\n          ) : (\n            <Typography\n              className=\"todo-body__description\"\n            >\n              {todo.description ? todo.description : 'No description'}\n            </Typography>\n          )}\n\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default memo(TodoBody);\n","import {\n  AllHTMLAttributes, FC, useLayoutEffect, useRef, useState,\n} from 'react';\nimport DynamicElement from '@components/DynamicElement';\n\ninterface TickerProps extends AllHTMLAttributes<HTMLElement> {\n  enable: boolean\n  element?: keyof HTMLElementTagNameMap\n}\n\nconst Ticker: FC<TickerProps> = (props) => {\n  const {\n    enable,\n    element,\n    children,\n    className = '',\n    ...restProps\n  } = props;\n\n  const tickerRef = useRef<HTMLElement | null>(null);\n\n  const [isScroll, setScroll] = useState(false);\n\n  useLayoutEffect(() => {\n    const ticker = tickerRef.current;\n\n    if (enable && ticker && ticker.scrollWidth > ticker.clientWidth) {\n      setScroll(true);\n    } else {\n      setScroll(false);\n    }\n  }, [enable]);\n\n  return (\n    <DynamicElement\n      ref={tickerRef}\n      element={element}\n      className={`ticker ${isScroll ? 'scroll' : ''} ${className}`}\n      {...restProps}\n    >\n      {isScroll ? [children, children] : children}\n    </DynamicElement>\n  );\n};\n\nexport default Ticker;\n","import { FC } from 'react';\nimport '@icons/ArrowIcon.scss';\n\ninterface ArrowIconProps {\n  direction: 'top' | 'right' | 'bottom' | 'left'\n}\n\nconst ArrowIcon: FC<ArrowIconProps> = ({ direction }) => (\n  <svg\n    className={`icon arrow-icon ${direction}`}\n    focusable=\"false\"\n    viewBox=\"-2 -2 28 28\"\n    aria-hidden=\"true\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" />\n  </svg>\n);\n\nexport default ArrowIcon;\n","import { Todo } from '@utils/types';\nimport { FC, memo, MouseEventHandler } from 'react';\nimport CheckBox from '@components/CheckBox';\nimport Input from '@components/Input';\nimport Ticker from '@components/Ticker';\nimport Typography from '@components/Typography';\nimport IconButton from '@components/IconButton';\nimport ArrowIcon from '@icons/ArrowIcon';\nimport CloseIcon from '@icons/CloseIcon';\nimport Progress from '@components/Progress';\n\ninterface TodoHeaderProps {\n  todo: Todo\n  checkTodo: MouseEventHandler\n  expandTodo: MouseEventHandler\n  closeTodo: MouseEventHandler\n  deleteTodo: MouseEventHandler\n  getFieldProps: any\n  isChecked: boolean\n  expanded: boolean\n  changing: boolean\n  deleteLoading: boolean\n}\n\nconst TodoHeader: FC<TodoHeaderProps> = (props) => {\n  const {\n    todo,\n    expanded,\n    changing,\n    deleteLoading,\n    isChecked,\n    expandTodo,\n    closeTodo,\n    deleteTodo,\n    checkTodo,\n    getFieldProps,\n  } = props;\n\n  return (\n    <div className=\"todo-item__header todo-header\">\n      <CheckBox\n        onClick={checkTodo}\n        disabled={deleteLoading || changing}\n        color={todo.color}\n        className=\"todo-header__checkbox\"\n        checked={isChecked}\n      />\n      <div className={`todo-header__title-wrapper ${changing ? 'edit' : ''}`}>\n\n        {changing ? (\n          <Input\n            autoComplete=\"off\"\n            className=\"todo-header__title-input\"\n            placeholder=\"Todo title...\"\n            {...getFieldProps('title')}\n          />\n        ) : (\n          <Ticker\n            enable={expanded}\n            className=\"todo-header__ticker\"\n          >\n            <Typography\n              onClick={checkTodo}\n              className={`todo-header__title ${isChecked ? 'done' : ''}`}\n              variant=\"h6\"\n            >\n              {todo.title}\n            </Typography>\n          </Ticker>\n        )}\n\n      </div>\n      <IconButton\n        className=\"todo-header__expand-btn todo-item__btn\"\n        onClick={expanded ? closeTodo : expandTodo}\n        name={String(todo.id)}\n        aria-label=\"expand todo\"\n        disabled={changing}\n      >\n        <ArrowIcon direction={expanded ? 'top' : 'bottom'} />\n      </IconButton>\n      <IconButton\n        className=\"todo-item__btn todo-header__delete-btn\"\n        onClick={deleteTodo}\n        disabled={deleteLoading || changing}\n        aria-label=\"delete todo\"\n      >\n        <CloseIcon />\n        <Progress\n          className=\"todo-header__delete-progress\"\n          visible={deleteLoading}\n        />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default memo(TodoHeader);\n","import { Todo, TodoValues } from '@utils/types';\nimport {\n  Dispatch,\n  FC, memo, MouseEventHandler, SetStateAction, useCallback, useMemo, useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport Paper from '@components/Paper';\nimport { deleteTodo, updateTodo } from '@redux/TodosSlice';\nimport { useFormik } from 'formik';\nimport TodoBody from '@components/TodoBody';\nimport TodoHeader from '@components/TodoHeader';\n\ninterface TodoItemProps {\n  todo: Todo\n  expanded: boolean\n  changing: boolean\n  setChangingTodo: Dispatch<SetStateAction<number | null>>\n  setExpandedTodo: Dispatch<SetStateAction<number | null>>\n  index: number\n}\n\nconst TodoItem: FC<TodoItemProps> = (props) => {\n  const {\n    todo,\n    expanded,\n    changing,\n    setChangingTodo,\n    setExpandedTodo,\n    index,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const { values: todoInfo, getFieldProps } = useFormik({\n    onSubmit: () => {},\n    initialValues: {\n      title: todo.title,\n      description: todo.description,\n      color: todo.color,\n    } as TodoValues,\n  });\n\n  const expandTodo: MouseEventHandler = useCallback(() => {\n    setExpandedTodo(todo.id);\n    setChangingTodo(null);\n  }, [todo.id, setExpandedTodo, setChangingTodo]);\n\n  const closeTodo: MouseEventHandler = useCallback(() => {\n    setExpandedTodo(null);\n  }, [setExpandedTodo]);\n\n  const changeTodo: MouseEventHandler = useCallback(() => {\n    setChangingTodo(todo.id);\n  }, [todo.id, setChangingTodo]);\n\n  const closeChangeTodo: MouseEventHandler = useCallback(() => {\n    setChangingTodo(null);\n  }, [setChangingTodo]);\n\n  const [deleteLoading, setDeleteLoading] = useState(false);\n\n  const [checked, setChecked] = useState(todo.isDone);\n\n  const handleCheckTodo = useCallback(() => {\n    setChecked((prevState) => !prevState);\n\n    dispatch(updateTodo({\n      id: todo.id,\n      isDone: !todo.isDone,\n    }));\n  }, [dispatch, todo.id, todo.isDone]);\n\n  const handleDeleteTodo = useCallback(() => {\n    setDeleteLoading(true);\n\n    dispatch(deleteTodo(todo.id));\n  }, [dispatch, todo.id]);\n\n  const todoItemStyles = useMemo(() => ({ transitionDelay: `${index * 25}ms` }), [index]);\n\n  return (\n    <Paper\n      element=\"li\"\n      className=\"todo-item\"\n      style={todoItemStyles}\n    >\n      <div className={`todo-item__mark ${todo.color}`} />\n      <TodoHeader\n        todo={todo}\n        expanded={expanded}\n        isChecked={checked}\n        changing={changing}\n        deleteLoading={deleteLoading}\n        checkTodo={handleCheckTodo}\n        expandTodo={expandTodo}\n        closeTodo={closeTodo}\n        deleteTodo={handleDeleteTodo}\n        getFieldProps={getFieldProps}\n      />\n      <TodoBody\n        todo={todo}\n        todoInfo={todoInfo}\n        expanded={expanded}\n        changeTodo={changeTodo}\n        closeChangeTodo={closeChangeTodo}\n        changing={changing}\n        getFieldProps={getFieldProps}\n      />\n    </Paper>\n  );\n};\n\nexport default memo(TodoItem);\n","import { Todo } from '@utils/types';\nimport { FC, memo, useState } from 'react';\nimport TodoItem from '@components/TodoItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Progress from '@components/Progress';\nimport Typography from '@components/Typography';\n\ninterface TodosListProps {\n  todos: Todo[]\n  loading: boolean\n}\n\nconst TodosList: FC<TodosListProps> = ({ todos, loading }) => {\n  const [expandedTodo, setExpandedTodo] = useState<number | null>(null);\n\n  const [chaningTodo, setChangingTodo] = useState<number | null>(null);\n\n  const todoItems = todos.map((todo, index) => (\n    <CSSTransition\n      key={todo.id}\n      classNames=\"todo-item\"\n      timeout={1000}\n    >\n      <TodoItem\n        expanded={expandedTodo === todo.id}\n        changing={chaningTodo === todo.id}\n        setChangingTodo={setChangingTodo}\n        setExpandedTodo={setExpandedTodo}\n        todo={todo}\n        index={index}\n      />\n    </CSSTransition>\n  ));\n\n  return (\n    <>\n      <Progress\n        className=\"todos-list__progress\"\n        visible={loading}\n      />\n      <TransitionGroup\n        className=\"todos-list\"\n        component=\"ul\"\n      >\n        {todoItems}\n      </TransitionGroup>\n      {!todos.length && !loading && (\n        <Typography\n          className=\"todos-list__title\"\n          transform=\"uppercase\"\n          variant=\"h6\"\n        >\n          No todos\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default memo(TodosList);\n","import Container from '@components/Container';\nimport TodoPushBar from '@components/TodoPushBar';\nimport TodosFilter from '@components/TodosFilter';\nimport TodosList from '@components/TodosList';\nimport { RootState } from '@redux/store';\nimport {\n  fetchTodos, filteredTodos, todosSliceSelector, TodosSliceState,\n} from '@redux/TodosSlice';\nimport { PENDING } from '@utils/constants';\nimport { TodoValues } from '@utils/types';\nimport {\n  FC, memo, useEffect, useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst TodosPage: FC = () => {\n  const dispatch = useDispatch();\n\n  const [todosFilter, setTodosFilter] = useState<TodoValues>({});\n\n  const { fetchStatus }: TodosSliceState = useSelector(todosSliceSelector);\n\n  const todos = useSelector((state: RootState) => filteredTodos(state, todosFilter));\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <TodoPushBar />\n      <TodosList\n        todos={todos}\n        loading={fetchStatus === PENDING}\n      />\n      <TodosFilter\n        filterTodos={setTodosFilter}\n        filterValues={todosFilter}\n      />\n    </Container>\n  );\n};\n\nexport default memo(TodosPage);\n","import TodosPage from '@pages/TodosPage';\n\nfunction App() {\n  return (\n    <TodosPage />\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport TodosSliceReducer from '@redux/TodosSlice';\n\nconst reducer = {\n  todosSliceState: TodosSliceReducer,\n};\n\nconst store = configureStore({ reducer });\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@src/index.scss';\nimport App from '@components/App';\nimport store from '@redux/store';\n\nconst root = document.getElementById('root');\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nrender(app, root);\n"],"sourceRoot":""}